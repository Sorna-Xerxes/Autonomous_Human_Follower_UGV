import serial
import time

def send_servo_angle(angle):
    port_name = "/dev/ttyACM0"
    stm32 = serial.Serial(port_name, 9600, timeout=1)
    print("Serial port opened")

    # Command to set servo angle
    command_set_angle = 0x01

    # Convert angle to a 32-bit integer (4 bytes)
    angle_bytes = angle.to_bytes(4, byteorder='big')  # Convert angle to 4-byte integer (big-endian)
    
    # Construct the command packet
    packet = bytearray()
    packet.append(command_set_angle)
    packet.extend(angle_bytes)  # Append the 4-byte angle to the packet
    print("Sending command packet:", packet)

    # Send the packet to STM32
    stm32.write(packet)
    time.sleep(0.1)  # Optional: add a delay if needed

    # Read response from STM32 (if any)
    data = stm32.readline().decode("utf-8")
    print("Received response:", data)

    # Close the serial port
    stm32.close()

if __name__ == "__main__":
    try:
        # Prompt user for servo angle
        angle_degrees = int(input("Enter servo angle (0-180 degrees): "))
        
        # Check if angle is within valid range (0-180)
        if 0 <= angle_degrees <= 180:
            # Convert angle from degrees to the corresponding STM32 value (0-255)
            servo_angle_stm32 = int(angle_degrees * 255 / 180)
            send_servo_angle(servo_angle_stm32)
        else:
            print("Invalid angle. Please enter an angle between 0 and 180 degrees.")
    except ValueError:
        print("Invalid input. Please enter a valid integer value.")
