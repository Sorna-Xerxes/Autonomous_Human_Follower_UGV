import serial
import time

port_name = "/dev/ttyACM0"
stm32 = serial.Serial(port_name, 9600, timeout=1)
print("Serial port opened")

# Send a known packet value to observe servo behavior
packet_value = 130
packet = bytearray()
packet.append(0x01)  # Command to set PWM
packet += packet_value.to_bytes(4, byteorder='big')
print("Sending packet:", packet)

stm32.write(packet)
time.sleep(0.1)

data = stm32.readline().decode("utf-8").strip()
print("Response:", data)

# Given values
x1 = 0    # Corresponding to 0 degrees
y1 = 18   # Packet value for 0 degrees
x2 = 180  # Corresponding to 180 degrees
y2 = 130  # Packet value for 180 degrees
x_target = 180  # Target angle in degrees

# Calculate slope (m)
m = (y2 - y1) / (x2 - x1)

# Calculate y-intercept (b) using y = m * x + b and the point (x1, y1)
b = y1 - m * x1

# Calculate the packet size (y_target) for the target angle (x_target)
y_target = m * x_target + b

# Round the packet size to an integer (if needed)
packet_size_90_degrees = int(round(y_target))

print("Packet size for 90 degrees:", packet_size_90_degrees)

# Send the calculated PWM value to set the servo to 90 degrees
packet = bytearray()
packet.append(0x01)  # Command to set PWM
packet += packet_size_90_degrees.to_bytes(4, byteorder='big')  # Use correct variable name

print("Sending PWM command for 90 degrees:", packet)
stm32.write(packet)
time.sleep(0.1)

data = stm32.readline().decode("utf-8").strip()
print("Response:", data)

stm32.close()
print("Serial port closed")
